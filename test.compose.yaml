services:
  db:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
  mock-omdb-api:
    build:
      context: ./mock-omdb
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "8081:8080"
  api:
    depends_on:
      - db
      - redis
      - mock-omdb-api
    environment:
      PG_HOST: db
      PG_PORT: 5432
      PG_USER: postgres
      PG_PASSWORD: postgres
      CACHE_TYPE: RedisCache
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      REDIS_PASSWORD: ""
      OMDB_API_KEY: "not-needed-for-testing"
      OMDB_API_URL: http://mock-omdb-api:8081
    build:
      context: ./movies-api
      target: prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "8080:8080"
  redis:
    image: redis:6
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 30s
      retries: 3
  e2e:
    image: ghcr.io/orange-opensource/hurl:5.0.1
    depends_on:
      - api
    command: ["--test", "/data/e2e.hurl", "--variable", "API_URL=http://api:8080"]
    volumes:
      - ./test-utils/e2e:/data
volumes:
  postgres_data:
